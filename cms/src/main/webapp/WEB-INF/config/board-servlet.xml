<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- 
	어떤한 라이브러리 참조도 없이 평소처럼 코딩 하면 됩니다. 
	모든 ajax 처리는 JsonView가 처리 함으로써 단지 JsonView가 선언된 스프링 빈 id를
	ModelAndView의 "setViewName" 메서드에 선언만 하면 됩니다. 
	
	Q1 : 그렇다면... 파라미터로 받는 값은 상관 없어지나?
	
	Q2 : org.springframework.web.servlet.view.json.MappingJacksonJsonView와 의 차이점은?
	-->
	<beans:bean id="jsonView"
		class="net.sf.json.spring.web.servlet.view.JsonView">
		<beans:property name="contentType"
			value="application/json;charset=UTF-8" />
	</beans:bean>

	<tx:annotation-driven />

	<beans:bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver">
		<beans:property value="10000000" name="maxUploadSize" />
	</beans:bean>
	
	<context:component-scan base-package="com.nd.cms" />

</beans:beans>
